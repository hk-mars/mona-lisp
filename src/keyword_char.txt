	"$",
	"%",
	"&",
	"*",
	"+",
	"-",
	".",
	"/",
	"0",
	"1",
	"2",
	"3",
	"4",
	"5",
	"6",
	"7",
	"8",
	"9",
	":",
	"<",
	"=",
	">",
	"@",
	"A",
	"B",
	"C",
	"D",
	"E",
	"F",
	"G",
	"H",
	"I",
	"J",
	"K",
	"L",
	"M",
	"N",
	"O",
	"P",
	"Q",
	"R",
	"S",
	"T",
	"U",
	"V",
	"W",
	"X",
	"Y",
	"Z",
	"a",
	"b",
	"c",
	"d",
	"e",
	"f",
	"g",
	"h",
	"i",
	"j",
	"k",
	"l",
	"m",
	"n",
	"o",
	"p",
	"q",
	"r",
	"s",
	"t",
	"u",
	"v",
	"w",
	"x",
	"y",
	"z",
	"^",
	"_",
	"~",
	"#\rubout",
	""",
	"'",
	"(",
	")",
	",",
	";",
	"`",
	"##",
	"#\backslash",
	"#\vertical-bar",
	"#\b",
	"#\t",
	"#\r",
	"#\n",
	"#\p",
	"#\space",
	"left-parent÷",
	"right-parent÷",
	"##left-parent := #\()right-parent := #\)¿Ÿƒ·˛",
	":= #\()right-parent := #\)¿Ÿƒ·˛",
	"#\()right-parent := #\)¿Ÿƒ·˛",
	":= #\)¿Ÿƒ·˛",
	"#\)¿Ÿƒ·˛",
	"<undefined>÷",
	"LIST  object  )",
	"array",
	"sequenceÅ÷",
	"typeenceÅ÷",
	"input-stream÷",
	"output-stream",
	"classt-stream",
	"CONS object object )",
	"CAR list )÷",
	"CDR list )÷",
	"SETQ setq-pair )",
	"DEFCONSTANT name form documentation )l-digit exponent",
	"LOOP compound-form )",
	"lambda-expression",
	"CAR",
	"CDR",
	"CONS",
	"<TBD>",
	"QUOTE",
	"LETTE",
	"LET*E",
	"IFT*E",
	"BLOCK",
	"CATCH",
	"THROW",
	"SETQW",
	"IF test-form then-form else-form )n )l-digit exponent",
	"EQ object object )",
	"(EQL object object )",
	"(EQUAL object object )",
	"RETURN form )",
	"BLOCK block-name  form  )se-form )n )l-digit exponent",
	"DEFUN function-name lambda-list documentation form )t",
	"LET (varÅ÷",
	"(varÅ÷",
	"(var init-form)) declaration form )ocumentation form )t",
	"init-form)) declaration form )ocumentation form )t",
	"<= number-token )",
	">= number-token )",
	"/= number-token )",
	"!= number-token )",
	"DEFSTRUCT name ( slot-name ) )m )ocumentation form )t",
