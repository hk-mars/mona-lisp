	"lisp-char ::=",
	"whitespace ::=",
	"backspace ::=",
	"tab ::=",
	"newline ::=",
	"linefeed ::=",
	"page ::=",
	"return-char ::=",
	"space ::=",
	"constituent-char ::=",
	"rubout ::=",
	"single-escape ::=",
	"multiple-escape ::=",
	"macro-char ::=",
	"terminating-char ::=",
	"non-terminating-char ::=",
	"left-parent ::=",
	"right-parent ::=",
	"token ::=",
	"number-token ::=",
	"integer ::=",
	"ratio ::=",
	"float ::=",
	"exponent ::=",
	"sign ::=",
	"slash ::=",
	"decimal-point ::=",
	"exponent-marker ::=",
	"decimal-digit ::=",
	"digit ::=",
	"symbol-token ::=",
	"list ::=",
	"object ::=",
	"element ::=",
	"list_car_element ::=",
	"cons ::=",
	"car ::=",
	"cdr ::=",
	"setq ::=",
	"setq-pair ::=",
	"setq-var ::=",
	"defconstant ::=",
	"name ::=",
	"form ::=",
	"documentation ::=",
	"compound-form ::=",
	"operator ::=",
	"function-call-operator ::=",
	"special-form-operator ::=",
	"macro-operator ::=",
	"string ::=",
	"if ::=",
	"test-form ::=",
	"then-form ::=",
	"else-form ::=",
	"eq ::=",
	"eql ::=",
	"equal ::=",
	"loop ::=",
	"return ::=",
	"block ::=",
	"block-name ::=",
	"defun ::=",
	"function-name ::=",
	"lambda-list ::=",
	"declaration ::=",
	"documentation ::=",
	"expression ::=",
	"let ::=",
	"var ::=",
	"init-form ::=",
	"num-add ::=",
	"num-less-than ::=",
	"num-less-or-equal-than ::=",
	"num-greater-than ::=",
	"num-greater-or-equal-than ::=",
	"num-equal-than ::=",
	"num-not-equal-than ::=",
	"defstruct ::=",
	"name ::=",
	"slot-name ::=",
	"defmacro ::=",
	"output-stream ::=",
	"lisp-char ::=",
	"whitespace ::=",
	"backspace ::=",
	"tab ::=",
	"newline ::=",
	"linefeed ::=",
	"page ::=",
	"return-char ::=",
	"space ::=",
	"constituent-char ::=",
	"rubout ::=",
	"single-escape ::=",
	"multiple-escape ::=",
	"macro-char ::=",
	"terminating-char ::=",
	"non-terminating-char ::=",
	"left-parent ::=",
	"right-parent ::=",
	"#\)",
	"token ::=",
	"number-token ::=",
	"integer ::=",
	"ratio ::=",
	"float ::=",
	"exponent ::=",
	"sign ::=",
	"slash ::=",
	"decimal-point ::=",
	"exponent-marker ::=",
	"decimal-digit ::=",
	"digit ::=",
	"<undefined>",
	"symbol-token ::=",
	"list ::=",
	"LIST",
	")",
	"object ::=",
	"element ::=",
	"array",
	"sequence",
	"type",
	"input-stream",
	"class",
	"list_car_element ::=",
	"LIST",
	")",
	"CAR",
	")",
	"CDR",
	")",
	"cons ::=",
	"CONS",
	")",
	"car ::=",
	"CAR",
	")",
	"CAR",
	")",
	"CAR",
	")",
	"cdr ::=",
	"CDR",
	")",
	"CDR",
	")",
	"setq ::=",
	"SETQ",
	")",
	"setq-pair ::=",
	"setq-var ::=",
	"defconstant ::=",
	"DEFCONSTANT",
	")",
	"name ::=",
	"form ::=",
	"documentation ::=",
	"compound-form ::=",
	"SETQ",
	")",
	"LOOP",
	")",
	"operator ::=",
	"lambda-expression",
	"function-call-operator ::=",
	"<TBD>",
	"special-form-operator ::=",
	"QUOTE",
	"LET",
	"LET*",
	"BLOCK",
	"CATCH",
	"THROW",
	"macro-operator ::=",
	"string ::=",
	"if ::=",
	"IF",
	")",
	"test-form ::=",
	"then-form ::=",
	"else-form ::=",
	"eq ::=",
	"EQ",
	")",
	"eql ::=",
	"(EQL",
	")",
	"equal ::=",
	"(EQUAL",
	")",
	"loop ::=",
	"LOOP",
	")",
	"return ::=",
	"RETURN",
	")",
	"block ::=",
	"BLOCK",
	")",
	"block-name ::=",
	"defun ::=",
	"DEFUN",
	")",
	"function-name ::=",
	"lambda-list ::=",
	")",
	"declaration ::=",
	"documentation ::=",
	"expression ::=",
	"let ::=",
	"LET",
	"(var",
	"(var",
	"init-form))",
	")",
	"var ::=",
	"init-form ::=",
	"num-add ::=",
	")",
	"num-less-than ::=",
	")",
	"num-less-or-equal-than ::=",
	"<=",
	")",
	"num-greater-than ::=",
	")",
	"num-greater-or-equal-than ::=",
	">=",
	")",
	"num-equal-than ::=",
	")",
	"num-not-equal-than ::=",
	"/=",
	")",
	"!=",
	")",
	"defstruct ::=",
	"DEFSTRUCT",
	")",
	"name ::=",
	"slot-name ::=",
	"defmacro ::=",
	")",
	")",
	"output-stream ::=",
	"QUOTE",
	"token ::=",
	"	number-token | 	symbol-token 	",
	"number-token",
	"	integer | 	ratio | 	float 				          ",
	"integer",
	"	[sign] {decimal-digit}+ decimal-point | 	[sign] {digit}+ 				         ",
	"[sign] {decimal-digit}+ decimal-point",
	"[sign]",
	"sign",
	"+ | -",
	"+",
	"+",
	"| -",
	"-",
	" {decimal-digit}+ decimal-point",
	"{decimal-digit}",
	"decimal-digit",
	"0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9",
	"0",
	"0",
	"| 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9",
	"1",
	"1",
	"| 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9",
	"2",
	"2",
	"| 3 | 4 | 5 | 6 | 7 | 8 | 9",
	"3",
	"3",
	"| 4 | 5 | 6 | 7 | 8 | 9",
	"4",
	"4",
	"| 5 | 6 | 7 | 8 | 9",
	"5",
	"5",
	"| 6 | 7 | 8 | 9",
	"6",
	"6",
	"| 7 | 8 | 9",
	"7",
	"7",
	"| 8 | 9",
	"8",
	"8",
	"| 9",
	"9",
	" decimal-point",
	".",
	"{decimal-digit}",
	"decimal-digit",
	"0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9",
	"0",
	"0",
	"| 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9",
	"1",
	"1",
	"| 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9",
	"2",
	"2",
	"| 3 | 4 | 5 | 6 | 7 | 8 | 9",
	"3",
	"3",
	"| 4 | 5 | 6 | 7 | 8 | 9",
	"4",
	"4",
	"| 5 | 6 | 7 | 8 | 9",
	"5",
	"5",
	"| 6 | 7 | 8 | 9",
	"6",
	"6",
	"| 7 | 8 | 9",
	"7",
	"7",
	"| 8 | 9",
	"8",
	"8",
	"| 9",
	"9",
	" decimal-point",
	".",
	"| 	[sign] {digit}+",
	"[sign]",
	"sign",
	"+ | -",
	"+",
	"+",
	"| -",
	"-",
	" {digit}+",
	"{digit}",
	"digit",
	"0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined> 	",
	"0",
	"0",
	"| 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"1",
	"1",
	"| 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"2",
	"2",
	"| 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"3",
	"3",
	"| 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"4",
	"4",
	"| 5 | 6 | 7 | 8 | 9 | <undefined>",
	"5",
	"5",
	"| 6 | 7 | 8 | 9 | <undefined>",
	"6",
	"6",
	"| 7 | 8 | 9 | <undefined>",
	"7",
	"7",
	"| 8 | 9 | <undefined>",
	"8",
	"8",
	"| 9 | <undefined>",
	"9",
	"9",
	"| <undefined>",
	"<undefined>",
	"{digit}",
	"digit",
	"0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined> 	",
	"0",
	"0",
	"| 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"1",
	"1",
	"| 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"2",
	"2",
	"| 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"3",
	"3",
	"| 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"4",
	"4",
	"| 5 | 6 | 7 | 8 | 9 | <undefined>",
	"5",
	"5",
	"| 6 | 7 | 8 | 9 | <undefined>",
	"6",
	"6",
	"| 7 | 8 | 9 | <undefined>",
	"7",
	"7",
	"| 8 | 9 | <undefined>",
	"8",
	"8",
	"| 9 | <undefined>",
	"9",
	"9",
	"| <undefined>",
	"<undefined>",
	"| 	ratio | 	float",
	"ratio",
	"	[sign] {digit}+ slash {digit}+  				      ",
	"[sign]",
	"sign",
	"+ | -",
	"+",
	"+",
	"| -",
	"-",
	" {digit}+ slash {digit}+",
	"{digit}",
	"digit",
	"0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined> 	",
	"0",
	"0",
	"| 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"1",
	"1",
	"| 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"2",
	"2",
	"| 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"3",
	"3",
	"| 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"4",
	"4",
	"| 5 | 6 | 7 | 8 | 9 | <undefined>",
	"5",
	"5",
	"| 6 | 7 | 8 | 9 | <undefined>",
	"6",
	"6",
	"| 7 | 8 | 9 | <undefined>",
	"7",
	"7",
	"| 8 | 9 | <undefined>",
	"8",
	"8",
	"| 9 | <undefined>",
	"9",
	"9",
	"| <undefined>",
	"<undefined>",
	" slash {digit}+",
	"slash",
	"/",
	"/",
	" {digit}+",
	"{digit}",
	"digit",
	"0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined> 	",
	"0",
	"0",
	"| 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"1",
	"1",
	"| 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"2",
	"2",
	"| 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"3",
	"3",
	"| 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"4",
	"4",
	"| 5 | 6 | 7 | 8 | 9 | <undefined>",
	"5",
	"5",
	"| 6 | 7 | 8 | 9 | <undefined>",
	"6",
	"6",
	"| 7 | 8 | 9 | <undefined>",
	"7",
	"7",
	"| 8 | 9 | <undefined>",
	"8",
	"8",
	"| 9 | <undefined>",
	"9",
	"9",
	"| <undefined>",
	"<undefined>",
	"{digit}",
	"digit",
	"0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined> 	",
	"0",
	"0",
	"| 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"1",
	"1",
	"| 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"2",
	"2",
	"| 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"3",
	"3",
	"| 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"4",
	"4",
	"| 5 | 6 | 7 | 8 | 9 | <undefined>",
	"5",
	"5",
	"| 6 | 7 | 8 | 9 | <undefined>",
	"6",
	"6",
	"| 7 | 8 | 9 | <undefined>",
	"7",
	"7",
	"| 8 | 9 | <undefined>",
	"8",
	"8",
	"| 9 | <undefined>",
	"9",
	"9",
	"| <undefined>",
	"<undefined>",
	" slash {digit}+",
	"slash",
	"/",
	"/",
	" {digit}+",
	"{digit}",
	"digit",
	"0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined> 	",
	"0",
	"0",
	"| 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"1",
	"1",
	"| 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"2",
	"2",
	"| 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"3",
	"3",
	"| 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"4",
	"4",
	"| 5 | 6 | 7 | 8 | 9 | <undefined>",
	"5",
	"5",
	"| 6 | 7 | 8 | 9 | <undefined>",
	"6",
	"6",
	"| 7 | 8 | 9 | <undefined>",
	"7",
	"7",
	"| 8 | 9 | <undefined>",
	"8",
	"8",
	"| 9 | <undefined>",
	"9",
	"9",
	"| <undefined>",
	"<undefined>",
	"| 	float",
	"	[sign] {decimal-digit}* decimal-point {decimal-digit}+ [exponent] |                        [sign] {decimal-digit}+ [decimal-point {decimal-digit}*] exponent 				       ",
	"[sign] {decimal-digit}* decimal-point {decimal-digit}+ [exponent]",
	"[sign]",
	"sign",
	"+ | -",
	"+",
	"+",
	"| -",
	"-",
	" {decimal-digit}* decimal-point {decimal-digit}+ [exponent]",
	"{decimal-digit}",
	"decimal-digit",
	"0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9",
	"0",
	"0",
	"| 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9",
	"1",
	"1",
	"| 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9",
	"2",
	"2",
	"| 3 | 4 | 5 | 6 | 7 | 8 | 9",
	"3",
	"3",
	"| 4 | 5 | 6 | 7 | 8 | 9",
	"4",
	"4",
	"| 5 | 6 | 7 | 8 | 9",
	"5",
	"5",
	"| 6 | 7 | 8 | 9",
	"6",
	"6",
	"| 7 | 8 | 9",
	"7",
	"7",
	"| 8 | 9",
	"8",
	"8",
	"| 9",
	"9",
	" decimal-point {decimal-digit}+ [exponent]",
	"decimal-point",
	".",
	".",
	" {decimal-digit}+ [exponent]",
	"{decimal-digit}",
	"decimal-digit",
	"0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9",
	"0",
	"0",
	"| 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9",
	"1",
	"1",
	"| 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9",
	"2",
	"2",
	"| 3 | 4 | 5 | 6 | 7 | 8 | 9",
	"3",
	"3",
	"| 4 | 5 | 6 | 7 | 8 | 9",
	"4",
	"4",
	"| 5 | 6 | 7 | 8 | 9",
	"5",
	"5",
	"| 6 | 7 | 8 | 9",
	"6",
	"6",
	"| 7 | 8 | 9",
	"7",
	"7",
	"| 8 | 9",
	"8",
	"8",
	"| 9",
	"9",
	" [exponent]",
	"[exponent]",
	"exponent",
	"	exponent-marker [sign] {digit}+	      ",
	"exponent-marker",
	"	e | s | f | d | l | E | S | F | D | L",
	"e",
	"e",
	"| s | f | d | l | E | S | F | D | L",
	"s",
	"s",
	"| f | d | l | E | S | F | D | L",
	"f",
	"f",
	"| d | l | E | S | F | D | L",
	"d",
	"d",
	"| l | E | S | F | D | L",
	"l",
	"l",
	"| E | S | F | D | L",
	"E",
	"E",
	"| S | F | D | L",
	"S",
	"S",
	"| F | D | L",
	"F",
	"F",
	"| D | L",
	"D",
	"D",
	"| L",
	"L",
	" [sign] {digit}+",
	"[sign]",
	"sign",
	"+ | -",
	"+",
	"+",
	"| -",
	"-",
	" {digit}+",
	"{digit}",
	"digit",
	"0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined> 	",
	"0",
	"0",
	"| 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"1",
	"1",
	"| 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"2",
	"2",
	"| 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"3",
	"3",
	"| 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"4",
	"4",
	"| 5 | 6 | 7 | 8 | 9 | <undefined>",
	"5",
	"5",
	"| 6 | 7 | 8 | 9 | <undefined>",
	"6",
	"6",
	"| 7 | 8 | 9 | <undefined>",
	"7",
	"7",
	"| 8 | 9 | <undefined>",
	"8",
	"8",
	"| 9 | <undefined>",
	"9",
	"9",
	"| <undefined>",
	"<undefined>",
	"{digit}",
	"digit",
	"0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined> 	",
	"0",
	"0",
	"| 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"1",
	"1",
	"| 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"2",
	"2",
	"| 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"3",
	"3",
	"| 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"4",
	"4",
	"| 5 | 6 | 7 | 8 | 9 | <undefined>",
	"5",
	"5",
	"| 6 | 7 | 8 | 9 | <undefined>",
	"6",
	"6",
	"| 7 | 8 | 9 | <undefined>",
	"7",
	"7",
	"| 8 | 9 | <undefined>",
	"8",
	"8",
	"| 9 | <undefined>",
	"9",
	"9",
	"| <undefined>",
	"<undefined>",
	"{decimal-digit}",
	"decimal-digit",
	"0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9",
	"0",
	"0",
	"| 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9",
	"1",
	"1",
	"| 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9",
	"2",
	"2",
	"| 3 | 4 | 5 | 6 | 7 | 8 | 9",
	"3",
	"3",
	"| 4 | 5 | 6 | 7 | 8 | 9",
	"4",
	"4",
	"| 5 | 6 | 7 | 8 | 9",
	"5",
	"5",
	"| 6 | 7 | 8 | 9",
	"6",
	"6",
	"| 7 | 8 | 9",
	"7",
	"7",
	"| 8 | 9",
	"8",
	"8",
	"| 9",
	"9",
	" decimal-point {decimal-digit}+ [exponent]",
	"decimal-point",
	".",
	".",
	" {decimal-digit}+ [exponent]",
	"{decimal-digit}",
	"decimal-digit",
	"0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9",
	"0",
	"0",
	"| 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9",
	"1",
	"1",
	"| 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9",
	"2",
	"2",
	"| 3 | 4 | 5 | 6 | 7 | 8 | 9",
	"3",
	"3",
	"| 4 | 5 | 6 | 7 | 8 | 9",
	"4",
	"4",
	"| 5 | 6 | 7 | 8 | 9",
	"5",
	"5",
	"| 6 | 7 | 8 | 9",
	"6",
	"6",
	"| 7 | 8 | 9",
	"7",
	"7",
	"| 8 | 9",
	"8",
	"8",
	"| 9",
	"9",
	" [exponent]",
	"[exponent]",
	"exponent",
	"	exponent-marker [sign] {digit}+	      ",
	"exponent-marker",
	"	e | s | f | d | l | E | S | F | D | L",
	"e",
	"e",
	"| s | f | d | l | E | S | F | D | L",
	"s",
	"s",
	"| f | d | l | E | S | F | D | L",
	"f",
	"f",
	"| d | l | E | S | F | D | L",
	"d",
	"d",
	"| l | E | S | F | D | L",
	"l",
	"l",
	"| E | S | F | D | L",
	"E",
	"E",
	"| S | F | D | L",
	"S",
	"S",
	"| F | D | L",
	"F",
	"F",
	"| D | L",
	"D",
	"D",
	"| L",
	"L",
	" [sign] {digit}+",
	"[sign]",
	"sign",
	"+ | -",
	"+",
	"+",
	"| -",
	"-",
	" {digit}+",
	"{digit}",
	"digit",
	"0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined> 	",
	"0",
	"0",
	"| 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"1",
	"1",
	"| 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"2",
	"2",
	"| 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"3",
	"3",
	"| 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"4",
	"4",
	"| 5 | 6 | 7 | 8 | 9 | <undefined>",
	"5",
	"5",
	"| 6 | 7 | 8 | 9 | <undefined>",
	"6",
	"6",
	"| 7 | 8 | 9 | <undefined>",
	"7",
	"7",
	"| 8 | 9 | <undefined>",
	"8",
	"8",
	"| 9 | <undefined>",
	"9",
	"9",
	"| <undefined>",
	"<undefined>",
	"{digit}",
	"digit",
	"0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined> 	",
	"0",
	"0",
	"| 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"1",
	"1",
	"| 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"2",
	"2",
	"| 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"3",
	"3",
	"| 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"4",
	"4",
	"| 5 | 6 | 7 | 8 | 9 | <undefined>",
	"5",
	"5",
	"| 6 | 7 | 8 | 9 | <undefined>",
	"6",
	"6",
	"| 7 | 8 | 9 | <undefined>",
	"7",
	"7",
	"| 8 | 9 | <undefined>",
	"8",
	"8",
	"| 9 | <undefined>",
	"9",
	"9",
	"| <undefined>",
	"<undefined>",
	"|                        [sign] {decimal-digit}+ [decimal-point {decimal-digit}*] exponent",
	"[sign]",
	"sign",
	"+ | -",
	"+",
	"+",
	"| -",
	"-",
	" {decimal-digit}+ [decimal-point {decimal-digit}*] exponent",
	"{decimal-digit}",
	"decimal-digit",
	"0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9",
	"0",
	"0",
	"| 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9",
	"1",
	"1",
	"| 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9",
	"2",
	"2",
	"| 3 | 4 | 5 | 6 | 7 | 8 | 9",
	"3",
	"3",
	"| 4 | 5 | 6 | 7 | 8 | 9",
	"4",
	"4",
	"| 5 | 6 | 7 | 8 | 9",
	"5",
	"5",
	"| 6 | 7 | 8 | 9",
	"6",
	"6",
	"| 7 | 8 | 9",
	"7",
	"7",
	"| 8 | 9",
	"8",
	"8",
	"| 9",
	"9",
	" [decimal-point {decimal-digit}*] exponent",
	"[decimal-point {decimal-digit}*]",
	"decimal-point {decimal-digit}*",
	"decimal-point",
	".",
	".",
	" {decimal-digit}*",
	"{decimal-digit}",
	"decimal-digit",
	"0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9",
	"0",
	"0",
	"| 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9",
	"1",
	"1",
	"| 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9",
	"2",
	"2",
	"| 3 | 4 | 5 | 6 | 7 | 8 | 9",
	"3",
	"3",
	"| 4 | 5 | 6 | 7 | 8 | 9",
	"4",
	"4",
	"| 5 | 6 | 7 | 8 | 9",
	"5",
	"5",
	"| 6 | 7 | 8 | 9",
	"6",
	"6",
	"| 7 | 8 | 9",
	"7",
	"7",
	"| 8 | 9",
	"8",
	"8",
	"| 9",
	"9",
	" exponent",
	"	exponent-marker [sign] {digit}+	      ",
	"exponent-marker",
	"	e | s | f | d | l | E | S | F | D | L",
	"e",
	"e",
	"| s | f | d | l | E | S | F | D | L",
	"s",
	"s",
	"| f | d | l | E | S | F | D | L",
	"f",
	"f",
	"| d | l | E | S | F | D | L",
	"d",
	"d",
	"| l | E | S | F | D | L",
	"l",
	"l",
	"| E | S | F | D | L",
	"E",
	"E",
	"| S | F | D | L",
	"S",
	"S",
	"| F | D | L",
	"F",
	"F",
	"| D | L",
	"D",
	"D",
	"| L",
	"L",
	" [sign] {digit}+",
	"[sign]",
	"sign",
	"+ | -",
	"+",
	"+",
	"| -",
	"-",
	" {digit}+",
	"{digit}",
	"digit",
	"0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined> 	",
	"0",
	"0",
	"| 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"1",
	"1",
	"| 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"2",
	"2",
	"| 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"3",
	"3",
	"| 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"4",
	"4",
	"| 5 | 6 | 7 | 8 | 9 | <undefined>",
	"5",
	"5",
	"| 6 | 7 | 8 | 9 | <undefined>",
	"6",
	"6",
	"| 7 | 8 | 9 | <undefined>",
	"7",
	"7",
	"| 8 | 9 | <undefined>",
	"8",
	"8",
	"| 9 | <undefined>",
	"9",
	"9",
	"| <undefined>",
	"<undefined>",
	"{digit}",
	"digit",
	"0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined> 	",
	"0",
	"0",
	"| 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"1",
	"1",
	"| 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"2",
	"2",
	"| 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"3",
	"3",
	"| 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"4",
	"4",
	"| 5 | 6 | 7 | 8 | 9 | <undefined>",
	"5",
	"5",
	"| 6 | 7 | 8 | 9 | <undefined>",
	"6",
	"6",
	"| 7 | 8 | 9 | <undefined>",
	"7",
	"7",
	"| 8 | 9 | <undefined>",
	"8",
	"8",
	"| 9 | <undefined>",
	"9",
	"9",
	"| <undefined>",
	"<undefined>",
	"	exponent-marker [sign] {digit}+	      ",
	"exponent-marker",
	"	e | s | f | d | l | E | S | F | D | L",
	"e",
	"e",
	"| s | f | d | l | E | S | F | D | L",
	"s",
	"s",
	"| f | d | l | E | S | F | D | L",
	"f",
	"f",
	"| d | l | E | S | F | D | L",
	"d",
	"d",
	"| l | E | S | F | D | L",
	"l",
	"l",
	"| E | S | F | D | L",
	"E",
	"E",
	"| S | F | D | L",
	"S",
	"S",
	"| F | D | L",
	"F",
	"F",
	"| D | L",
	"D",
	"D",
	"| L",
	"L",
	" [sign] {digit}+",
	"[sign]",
	"sign",
	"+ | -",
	"+",
	"+",
	"| -",
	"-",
	" {digit}+",
	"{digit}",
	"digit",
	"0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined> 	",
	"0",
	"0",
	"| 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"1",
	"1",
	"| 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"2",
	"2",
	"| 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"3",
	"3",
	"| 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"4",
	"4",
	"| 5 | 6 | 7 | 8 | 9 | <undefined>",
	"5",
	"5",
	"| 6 | 7 | 8 | 9 | <undefined>",
	"6",
	"6",
	"| 7 | 8 | 9 | <undefined>",
	"7",
	"7",
	"| 8 | 9 | <undefined>",
	"8",
	"8",
	"| 9 | <undefined>",
	"9",
	"9",
	"| <undefined>",
	"<undefined>",
	"{digit}",
	"digit",
	"0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined> 	",
	"0",
	"0",
	"| 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"1",
	"1",
	"| 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"2",
	"2",
	"| 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"3",
	"3",
	"| 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"4",
	"4",
	"| 5 | 6 | 7 | 8 | 9 | <undefined>",
	"5",
	"5",
	"| 6 | 7 | 8 | 9 | <undefined>",
	"6",
	"6",
	"| 7 | 8 | 9 | <undefined>",
	"7",
	"7",
	"| 8 | 9 | <undefined>",
	"8",
	"8",
	"| 9 | <undefined>",
	"9",
	"9",
	"| <undefined>",
	"<undefined>",
	"{decimal-digit}",
	"decimal-digit",
	"0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9",
	"0",
	"0",
	"| 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9",
	"1",
	"1",
	"| 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9",
	"2",
	"2",
	"| 3 | 4 | 5 | 6 | 7 | 8 | 9",
	"3",
	"3",
	"| 4 | 5 | 6 | 7 | 8 | 9",
	"4",
	"4",
	"| 5 | 6 | 7 | 8 | 9",
	"5",
	"5",
	"| 6 | 7 | 8 | 9",
	"6",
	"6",
	"| 7 | 8 | 9",
	"7",
	"7",
	"| 8 | 9",
	"8",
	"8",
	"| 9",
	"9",
	" [decimal-point {decimal-digit}*] exponent",
	"[decimal-point {decimal-digit}*]",
	"decimal-point {decimal-digit}*",
	"decimal-point",
	".",
	".",
	" {decimal-digit}*",
	"{decimal-digit}",
	"decimal-digit",
	"0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9",
	"0",
	"0",
	"| 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9",
	"1",
	"1",
	"| 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9",
	"2",
	"2",
	"| 3 | 4 | 5 | 6 | 7 | 8 | 9",
	"3",
	"3",
	"| 4 | 5 | 6 | 7 | 8 | 9",
	"4",
	"4",
	"| 5 | 6 | 7 | 8 | 9",
	"5",
	"5",
	"| 6 | 7 | 8 | 9",
	"6",
	"6",
	"| 7 | 8 | 9",
	"7",
	"7",
	"| 8 | 9",
	"8",
	"8",
	"| 9",
	"9",
	" exponent",
	"	exponent-marker [sign] {digit}+	      ",
	"exponent-marker",
	"	e | s | f | d | l | E | S | F | D | L",
	"e",
	"e",
	"| s | f | d | l | E | S | F | D | L",
	"s",
	"s",
	"| f | d | l | E | S | F | D | L",
	"f",
	"f",
	"| d | l | E | S | F | D | L",
	"d",
	"d",
	"| l | E | S | F | D | L",
	"l",
	"l",
	"| E | S | F | D | L",
	"E",
	"E",
	"| S | F | D | L",
	"S",
	"S",
	"| F | D | L",
	"F",
	"F",
	"| D | L",
	"D",
	"D",
	"| L",
	"L",
	" [sign] {digit}+",
	"[sign]",
	"sign",
	"+ | -",
	"+",
	"+",
	"| -",
	"-",
	" {digit}+",
	"{digit}",
	"digit",
	"0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined> 	",
	"0",
	"0",
	"| 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"1",
	"1",
	"| 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"2",
	"2",
	"| 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"3",
	"3",
	"| 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"4",
	"4",
	"| 5 | 6 | 7 | 8 | 9 | <undefined>",
	"5",
	"5",
	"| 6 | 7 | 8 | 9 | <undefined>",
	"6",
	"6",
	"| 7 | 8 | 9 | <undefined>",
	"7",
	"7",
	"| 8 | 9 | <undefined>",
	"8",
	"8",
	"| 9 | <undefined>",
	"9",
	"9",
	"| <undefined>",
	"<undefined>",
	"{digit}",
	"digit",
	"0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined> 	",
	"0",
	"0",
	"| 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"1",
	"1",
	"| 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"2",
	"2",
	"| 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"3",
	"3",
	"| 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"4",
	"4",
	"| 5 | 6 | 7 | 8 | 9 | <undefined>",
	"5",
	"5",
	"| 6 | 7 | 8 | 9 | <undefined>",
	"6",
	"6",
	"| 7 | 8 | 9 | <undefined>",
	"7",
	"7",
	"| 8 | 9 | <undefined>",
	"8",
	"8",
	"| 9 | <undefined>",
	"9",
	"9",
	"| <undefined>",
	"<undefined>",
	"	exponent-marker [sign] {digit}+	      ",
	"exponent-marker",
	"	e | s | f | d | l | E | S | F | D | L",
	"e",
	"e",
	"| s | f | d | l | E | S | F | D | L",
	"s",
	"s",
	"| f | d | l | E | S | F | D | L",
	"f",
	"f",
	"| d | l | E | S | F | D | L",
	"d",
	"d",
	"| l | E | S | F | D | L",
	"l",
	"l",
	"| E | S | F | D | L",
	"E",
	"E",
	"| S | F | D | L",
	"S",
	"S",
	"| F | D | L",
	"F",
	"F",
	"| D | L",
	"D",
	"D",
	"| L",
	"L",
	" [sign] {digit}+",
	"[sign]",
	"sign",
	"+ | -",
	"+",
	"+",
	"| -",
	"-",
	" {digit}+",
	"{digit}",
	"digit",
	"0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined> 	",
	"0",
	"0",
	"| 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"1",
	"1",
	"| 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"2",
	"2",
	"| 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"3",
	"3",
	"| 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"4",
	"4",
	"| 5 | 6 | 7 | 8 | 9 | <undefined>",
	"5",
	"5",
	"| 6 | 7 | 8 | 9 | <undefined>",
	"6",
	"6",
	"| 7 | 8 | 9 | <undefined>",
	"7",
	"7",
	"| 8 | 9 | <undefined>",
	"8",
	"8",
	"| 9 | <undefined>",
	"9",
	"9",
	"| <undefined>",
	"<undefined>",
	"{digit}",
	"digit",
	"0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined> 	",
	"0",
	"0",
	"| 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"1",
	"1",
	"| 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"2",
	"2",
	"| 3 | 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"3",
	"3",
	"| 4 | 5 | 6 | 7 | 8 | 9 | <undefined>",
	"4",
	"4",
	"| 5 | 6 | 7 | 8 | 9 | <undefined>",
	"5",
	"5",
	"| 6 | 7 | 8 | 9 | <undefined>",
	"6",
	"6",
	"| 7 | 8 | 9 | <undefined>",
	"7",
	"7",
	"| 8 | 9 | <undefined>",
	"8",
	"8",
	"| 9 | <undefined>",
	"9",
	"9",
	"| <undefined>",
	"<undefined>",
	"| 	symbol-token",
	"<undefined>",
	"<undefined>",
	"object ::=",
	"	element | 	<undefined> 	",
	"element",
	"	list_car_element | 	array | 	sequence | 	type | 	input-stream | 	output-stream | 	class 	",
	"list_car_element",
	"token",
	"	whitespace |  	constituent-char | 	single-escape |  	multiple-escape | 	macro-char 	",
	"whitespace",
	"	backspace |  	tab |  	newline |  	linefeed |  	page |  	return-char |  	space 		",
	"backspace",
	"|  	tab |  	newline |  	linefeed |  	page |  	return-char |  	space",
	"tab",
	"|  	newline |  	linefeed |  	page |  	return-char |  	space",
	"newline",
	"|  	linefeed |  	page |  	return-char |  	space",
	"linefeed",
	"|  	page |  	return-char |  	space",
	"page",
	"#\p",
	"|  	return-char |  	space",
	"return-char",
	"#\r",
	"|  	space",
	"#\space ",
	"#\space",
	"|  	constituent-char | 	single-escape |  	multiple-escape | 	macro-char",
	"constituent-char",
	"$",
	"$",
	"| % | & | * | + | - | . | / | 	0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 	: | < | = | > | @ |  	A | B | C | D | E | F | G | H | I | J | K | L | M |  	N | O | P | Q | R | S | T | U | V | W | X | Y | Z | 	a | b | c | d | e | f | g | h | i | j | k | l | m |  	n | o | p | q | r | s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"%",
	"%",
	"| & | * | + | - | . | / | 	0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 	: | < | = | > | @ |  	A | B | C | D | E | F | G | H | I | J | K | L | M |  	N | O | P | Q | R | S | T | U | V | W | X | Y | Z | 	a | b | c | d | e | f | g | h | i | j | k | l | m |  	n | o | p | q | r | s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"&",
	"&",
	"| * | + | - | . | / | 	0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 	: | < | = | > | @ |  	A | B | C | D | E | F | G | H | I | J | K | L | M |  	N | O | P | Q | R | S | T | U | V | W | X | Y | Z | 	a | b | c | d | e | f | g | h | i | j | k | l | m |  	n | o | p | q | r | s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"*",
	"*",
	"| + | - | . | / | 	0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 	: | < | = | > | @ |  	A | B | C | D | E | F | G | H | I | J | K | L | M |  	N | O | P | Q | R | S | T | U | V | W | X | Y | Z | 	a | b | c | d | e | f | g | h | i | j | k | l | m |  	n | o | p | q | r | s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"+",
	"+",
	"| - | . | / | 	0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 	: | < | = | > | @ |  	A | B | C | D | E | F | G | H | I | J | K | L | M |  	N | O | P | Q | R | S | T | U | V | W | X | Y | Z | 	a | b | c | d | e | f | g | h | i | j | k | l | m |  	n | o | p | q | r | s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"-",
	"-",
	"| . | / | 	0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 	: | < | = | > | @ |  	A | B | C | D | E | F | G | H | I | J | K | L | M |  	N | O | P | Q | R | S | T | U | V | W | X | Y | Z | 	a | b | c | d | e | f | g | h | i | j | k | l | m |  	n | o | p | q | r | s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	".",
	".",
	"| / | 	0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 	: | < | = | > | @ |  	A | B | C | D | E | F | G | H | I | J | K | L | M |  	N | O | P | Q | R | S | T | U | V | W | X | Y | Z | 	a | b | c | d | e | f | g | h | i | j | k | l | m |  	n | o | p | q | r | s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"/",
	"/",
	"| 	0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 	: | < | = | > | @ |  	A | B | C | D | E | F | G | H | I | J | K | L | M |  	N | O | P | Q | R | S | T | U | V | W | X | Y | Z | 	a | b | c | d | e | f | g | h | i | j | k | l | m |  	n | o | p | q | r | s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"0",
	"0",
	"| 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 	: | < | = | > | @ |  	A | B | C | D | E | F | G | H | I | J | K | L | M |  	N | O | P | Q | R | S | T | U | V | W | X | Y | Z | 	a | b | c | d | e | f | g | h | i | j | k | l | m |  	n | o | p | q | r | s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"1",
	"1",
	"| 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 	: | < | = | > | @ |  	A | B | C | D | E | F | G | H | I | J | K | L | M |  	N | O | P | Q | R | S | T | U | V | W | X | Y | Z | 	a | b | c | d | e | f | g | h | i | j | k | l | m |  	n | o | p | q | r | s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"2",
	"2",
	"| 3 | 4 | 5 | 6 | 7 | 8 | 9 | 	: | < | = | > | @ |  	A | B | C | D | E | F | G | H | I | J | K | L | M |  	N | O | P | Q | R | S | T | U | V | W | X | Y | Z | 	a | b | c | d | e | f | g | h | i | j | k | l | m |  	n | o | p | q | r | s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"3",
	"3",
	"| 4 | 5 | 6 | 7 | 8 | 9 | 	: | < | = | > | @ |  	A | B | C | D | E | F | G | H | I | J | K | L | M |  	N | O | P | Q | R | S | T | U | V | W | X | Y | Z | 	a | b | c | d | e | f | g | h | i | j | k | l | m |  	n | o | p | q | r | s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"4",
	"4",
	"| 5 | 6 | 7 | 8 | 9 | 	: | < | = | > | @ |  	A | B | C | D | E | F | G | H | I | J | K | L | M |  	N | O | P | Q | R | S | T | U | V | W | X | Y | Z | 	a | b | c | d | e | f | g | h | i | j | k | l | m |  	n | o | p | q | r | s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"5",
	"5",
	"| 6 | 7 | 8 | 9 | 	: | < | = | > | @ |  	A | B | C | D | E | F | G | H | I | J | K | L | M |  	N | O | P | Q | R | S | T | U | V | W | X | Y | Z | 	a | b | c | d | e | f | g | h | i | j | k | l | m |  	n | o | p | q | r | s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"6",
	"6",
	"| 7 | 8 | 9 | 	: | < | = | > | @ |  	A | B | C | D | E | F | G | H | I | J | K | L | M |  	N | O | P | Q | R | S | T | U | V | W | X | Y | Z | 	a | b | c | d | e | f | g | h | i | j | k | l | m |  	n | o | p | q | r | s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"7",
	"7",
	"| 8 | 9 | 	: | < | = | > | @ |  	A | B | C | D | E | F | G | H | I | J | K | L | M |  	N | O | P | Q | R | S | T | U | V | W | X | Y | Z | 	a | b | c | d | e | f | g | h | i | j | k | l | m |  	n | o | p | q | r | s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"8",
	"8",
	"| 9 | 	: | < | = | > | @ |  	A | B | C | D | E | F | G | H | I | J | K | L | M |  	N | O | P | Q | R | S | T | U | V | W | X | Y | Z | 	a | b | c | d | e | f | g | h | i | j | k | l | m |  	n | o | p | q | r | s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"9",
	"9",
	"| 	: | < | = | > | @ |  	A | B | C | D | E | F | G | H | I | J | K | L | M |  	N | O | P | Q | R | S | T | U | V | W | X | Y | Z | 	a | b | c | d | e | f | g | h | i | j | k | l | m |  	n | o | p | q | r | s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	":",
	":",
	"| < | = | > | @ |  	A | B | C | D | E | F | G | H | I | J | K | L | M |  	N | O | P | Q | R | S | T | U | V | W | X | Y | Z | 	a | b | c | d | e | f | g | h | i | j | k | l | m |  	n | o | p | q | r | s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"<",
	"<",
	"| = | > | @ |  	A | B | C | D | E | F | G | H | I | J | K | L | M |  	N | O | P | Q | R | S | T | U | V | W | X | Y | Z | 	a | b | c | d | e | f | g | h | i | j | k | l | m |  	n | o | p | q | r | s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"=",
	"=",
	"| > | @ |  	A | B | C | D | E | F | G | H | I | J | K | L | M |  	N | O | P | Q | R | S | T | U | V | W | X | Y | Z | 	a | b | c | d | e | f | g | h | i | j | k | l | m |  	n | o | p | q | r | s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	">",
	">",
	"| @ |  	A | B | C | D | E | F | G | H | I | J | K | L | M |  	N | O | P | Q | R | S | T | U | V | W | X | Y | Z | 	a | b | c | d | e | f | g | h | i | j | k | l | m |  	n | o | p | q | r | s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"@",
	"@",
	"|  	A | B | C | D | E | F | G | H | I | J | K | L | M |  	N | O | P | Q | R | S | T | U | V | W | X | Y | Z | 	a | b | c | d | e | f | g | h | i | j | k | l | m |  	n | o | p | q | r | s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"A",
	"A",
	"| B | C | D | E | F | G | H | I | J | K | L | M |  	N | O | P | Q | R | S | T | U | V | W | X | Y | Z | 	a | b | c | d | e | f | g | h | i | j | k | l | m |  	n | o | p | q | r | s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"B",
	"B",
	"| C | D | E | F | G | H | I | J | K | L | M |  	N | O | P | Q | R | S | T | U | V | W | X | Y | Z | 	a | b | c | d | e | f | g | h | i | j | k | l | m |  	n | o | p | q | r | s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"C",
	"C",
	"| D | E | F | G | H | I | J | K | L | M |  	N | O | P | Q | R | S | T | U | V | W | X | Y | Z | 	a | b | c | d | e | f | g | h | i | j | k | l | m |  	n | o | p | q | r | s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"D",
	"D",
	"| E | F | G | H | I | J | K | L | M |  	N | O | P | Q | R | S | T | U | V | W | X | Y | Z | 	a | b | c | d | e | f | g | h | i | j | k | l | m |  	n | o | p | q | r | s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"E",
	"E",
	"| F | G | H | I | J | K | L | M |  	N | O | P | Q | R | S | T | U | V | W | X | Y | Z | 	a | b | c | d | e | f | g | h | i | j | k | l | m |  	n | o | p | q | r | s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"F",
	"F",
	"| G | H | I | J | K | L | M |  	N | O | P | Q | R | S | T | U | V | W | X | Y | Z | 	a | b | c | d | e | f | g | h | i | j | k | l | m |  	n | o | p | q | r | s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"G",
	"G",
	"| H | I | J | K | L | M |  	N | O | P | Q | R | S | T | U | V | W | X | Y | Z | 	a | b | c | d | e | f | g | h | i | j | k | l | m |  	n | o | p | q | r | s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"H",
	"H",
	"| I | J | K | L | M |  	N | O | P | Q | R | S | T | U | V | W | X | Y | Z | 	a | b | c | d | e | f | g | h | i | j | k | l | m |  	n | o | p | q | r | s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"I",
	"I",
	"| J | K | L | M |  	N | O | P | Q | R | S | T | U | V | W | X | Y | Z | 	a | b | c | d | e | f | g | h | i | j | k | l | m |  	n | o | p | q | r | s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"J",
	"J",
	"| K | L | M |  	N | O | P | Q | R | S | T | U | V | W | X | Y | Z | 	a | b | c | d | e | f | g | h | i | j | k | l | m |  	n | o | p | q | r | s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"K",
	"K",
	"| L | M |  	N | O | P | Q | R | S | T | U | V | W | X | Y | Z | 	a | b | c | d | e | f | g | h | i | j | k | l | m |  	n | o | p | q | r | s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"L",
	"L",
	"| M |  	N | O | P | Q | R | S | T | U | V | W | X | Y | Z | 	a | b | c | d | e | f | g | h | i | j | k | l | m |  	n | o | p | q | r | s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"M",
	"M",
	"|  	N | O | P | Q | R | S | T | U | V | W | X | Y | Z | 	a | b | c | d | e | f | g | h | i | j | k | l | m |  	n | o | p | q | r | s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"N",
	"N",
	"| O | P | Q | R | S | T | U | V | W | X | Y | Z | 	a | b | c | d | e | f | g | h | i | j | k | l | m |  	n | o | p | q | r | s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"O",
	"O",
	"| P | Q | R | S | T | U | V | W | X | Y | Z | 	a | b | c | d | e | f | g | h | i | j | k | l | m |  	n | o | p | q | r | s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"P",
	"P",
	"| Q | R | S | T | U | V | W | X | Y | Z | 	a | b | c | d | e | f | g | h | i | j | k | l | m |  	n | o | p | q | r | s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"Q",
	"Q",
	"| R | S | T | U | V | W | X | Y | Z | 	a | b | c | d | e | f | g | h | i | j | k | l | m |  	n | o | p | q | r | s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"R",
	"R",
	"| S | T | U | V | W | X | Y | Z | 	a | b | c | d | e | f | g | h | i | j | k | l | m |  	n | o | p | q | r | s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"S",
	"S",
	"| T | U | V | W | X | Y | Z | 	a | b | c | d | e | f | g | h | i | j | k | l | m |  	n | o | p | q | r | s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"T",
	"T",
	"| U | V | W | X | Y | Z | 	a | b | c | d | e | f | g | h | i | j | k | l | m |  	n | o | p | q | r | s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"U",
	"U",
	"| V | W | X | Y | Z | 	a | b | c | d | e | f | g | h | i | j | k | l | m |  	n | o | p | q | r | s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"V",
	"V",
	"| W | X | Y | Z | 	a | b | c | d | e | f | g | h | i | j | k | l | m |  	n | o | p | q | r | s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"W",
	"W",
	"| X | Y | Z | 	a | b | c | d | e | f | g | h | i | j | k | l | m |  	n | o | p | q | r | s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"X",
	"X",
	"| Y | Z | 	a | b | c | d | e | f | g | h | i | j | k | l | m |  	n | o | p | q | r | s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"Y",
	"Y",
	"| Z | 	a | b | c | d | e | f | g | h | i | j | k | l | m |  	n | o | p | q | r | s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"Z",
	"Z",
	"| 	a | b | c | d | e | f | g | h | i | j | k | l | m |  	n | o | p | q | r | s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"a",
	"a",
	"| b | c | d | e | f | g | h | i | j | k | l | m |  	n | o | p | q | r | s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"b",
	"b",
	"| c | d | e | f | g | h | i | j | k | l | m |  	n | o | p | q | r | s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"c",
	"c",
	"| d | e | f | g | h | i | j | k | l | m |  	n | o | p | q | r | s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"d",
	"d",
	"| e | f | g | h | i | j | k | l | m |  	n | o | p | q | r | s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"e",
	"e",
	"| f | g | h | i | j | k | l | m |  	n | o | p | q | r | s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"f",
	"f",
	"| g | h | i | j | k | l | m |  	n | o | p | q | r | s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"g",
	"g",
	"| h | i | j | k | l | m |  	n | o | p | q | r | s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"h",
	"h",
	"| i | j | k | l | m |  	n | o | p | q | r | s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"i",
	"i",
	"| j | k | l | m |  	n | o | p | q | r | s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"j",
	"j",
	"| k | l | m |  	n | o | p | q | r | s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"k",
	"k",
	"| l | m |  	n | o | p | q | r | s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"l",
	"l",
	"| m |  	n | o | p | q | r | s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"m",
	"m",
	"|  	n | o | p | q | r | s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"n",
	"n",
	"| o | p | q | r | s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"o",
	"o",
	"| p | q | r | s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"p",
	"p",
	"| q | r | s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"q",
	"q",
	"| r | s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"r",
	"r",
	"| s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"s",
	"s",
	"| t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"t",
	"t",
	"| u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"u",
	"u",
	"| v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"v",
	"v",
	"| w | x | y | z |	 	^ | _ | ~ | rubout",
	"w",
	"w",
	"| x | y | z |	 	^ | _ | ~ | rubout",
	"x",
	"x",
	"| y | z |	 	^ | _ | ~ | rubout",
	"y",
	"y",
	"| z |	 	^ | _ | ~ | rubout",
	"z",
	"z",
	"|	 	^ | _ | ~ | rubout",
	"^",
	"^",
	"| _ | ~ | rubout",
	"_",
	"_",
	"| ~ | rubout",
	"~",
	"~",
	"| rubout",
	"#\rubout",
	"| 	single-escape |  	multiple-escape | 	macro-char",
	"single-escape",
	"|  	multiple-escape | 	macro-char",
	"multiple-escape",
	"#\vertical-bar",
	"| 	macro-char",
	"	terminating-char |  	non-terminating-char 	",
	"terminating-char",
	"" | ' | left-parent | right-parent | , | ; | `",
	""",
	""",
	"| ' | left-parent | right-parent | , | ; | `",
	"'",
	"'",
	"| left-parent | right-parent | , | ; | `",
	"left-parent",
	"| right-parent | , | ; | `",
	"right-parent",
	"#\)",
	"#\)",
	"| , | ; | `",
	",",
	",",
	"| ; | `",
	";",
	";",
	"| `",
	"`",
	"|  	non-terminating-char",
	"(",
	" LIST { object }* )",
	"LIST",
	"{ object }",
	" )",
	")",
	"( CAR list )",
	"(",
	" CAR list )",
	"CAR",
	"	( LIST { object }* )",
	"(",
	" LIST { object }* )",
	"LIST",
	"{ object }",
	" )",
	")",
	" )",
	")",
	"(",
	" CDR list )",
	"CDR",
	"	( LIST { object }* )",
	"(",
	" LIST { object }* )",
	"LIST",
	"{ object }",
	" )",
	")",
	" )",
	")",
	"| 	array | 	sequence | 	type | 	input-stream | 	output-stream | 	class",
	"array",
	"array",
	"| 	sequence | 	type | 	input-stream | 	output-stream | 	class",
	"sequence",
	"sequence",
	"| 	type | 	input-stream | 	output-stream | 	class",
	"type",
	"type",
	"| 	input-stream | 	output-stream | 	class",
	"input-stream",
	"input-stream",
	"| 	output-stream | 	class",
	"output-stream",
	"<undefined>",
	"<undefined>",
	"| 	class",
	"class",
	"| 	<undefined>",
	"<undefined>",
	"list ::=",
	"	( LIST { object }* )",
	"(",
	" LIST { object }* )",
	"LIST",
	"{ object }",
	" )",
	")",
	"car ::=",
	"( CAR list )",
	"(",
	" CAR list )",
	"CAR",
	" )",
	")",
	"(",
	"CAR",
	"( CDR list )",
	"(",
	" CDR list )",
	"CDR",
	" )",
	")",
	"(",
	"CDR",
	" )",
	")",
	" )",
	")",
	"(",
	"CAR",
	" )",
	")",
	"cdr ::=",
	"( CDR list )",
	"(",
	" CDR list )",
	"CDR",
	" )",
	")",
	"(",
	"CDR",
	" )",
	")",
	"num-add ::=",
	"	( + {number-token}* ) 	",
	"(",
	" + {number-token}* )",
	"+",
	" {number-token}* )",
	"{number-token}",
	"number-token",
	" )",
	")",
	"num-less-than ::=",
	"	( < {number-token}* ) 	",
	"(",
	" < {number-token}* )",
	"<",
	" {number-token}* )",
	"{number-token}",
	"number-token",
	" )",
	")",
	"num-less-or-equal-than ::=",
	"	( <= {number-token}* ) 		",
	"(",
	" <= {number-token}* )",
	"<=",
	" {number-token}* )",
	"{number-token}",
	"number-token",
	" )",
	")",
	"num-greater-than ::=",
	"	( > {number-token}* ) 			",
	"(",
	" > {number-token}* )",
	">",
	" {number-token}* )",
	"{number-token}",
	"number-token",
	" )",
	")",
	"num-greater-or-equal-than ::=",
	"	( >= {number-token}* )		 		",
	"(",
	" >= {number-token}* )",
	">=",
	" {number-token}* )",
	"{number-token}",
	"number-token",
	" )",
	")",
	"num-euqal-than ::=",
	"num-not-equal-than ::=",
	"	( /= {number-token}* ) | 	( != {number-token}* )		 	 	",
	"( /= {number-token}* )",
	"(",
	" /= {number-token}* )",
	"/=",
	" {number-token}* )",
	"{number-token}",
	"number-token",
	" )",
	")",
	"| 	( != {number-token}* )",
	"(",
	" != {number-token}* )",
	"!=",
	" {number-token}* )",
	"{number-token}",
	"number-token",
	" )",
	")",
	"eq ::=",
	"( EQ object object )",
	"(",
	" EQ object object )",
	"EQ",
	"object",
	"object",
	" )",
	")",
	"eql ::=",
	"(EQL object object )",
	"(EQL",
	"object",
	"object",
	" )",
	")",
	"equal ::=",
	"(EQUAL object object )",
	"(EQUAL",
	"object",
	"object",
	" )",
	")",
	"compound-form ::=",
	"( CONS object object )",
	"(",
	" CONS object object )",
	"CONS",
	"object",
	"object",
	" )",
	")",
	"	( IF test-form then-form [else-form] )",
	"(",
	" IF test-form then-form [else-form] )",
	"IF",
	"form",
	"object | symbol-token | compound-form",
	"object",
	"| symbol-token | compound-form",
	"symbol-token",
	"| compound-form",
	"form",
	"object | symbol-token | compound-form",
	"object",
	"| symbol-token | compound-form",
	"symbol-token",
	"| compound-form",
	"[else-form]",
	"form",
	"object | symbol-token | compound-form",
	"object",
	"| symbol-token | compound-form",
	"symbol-token",
	"| compound-form",
	" )",
	")",
	")",
	"	( RETURN [form] ) 	 	",
	"(",
	" RETURN [form] )",
	"RETURN",
	"[form]",
	"form",
	"object | symbol-token | compound-form",
	"object",
	"| symbol-token | compound-form",
	"symbol-token",
	"| compound-form",
	" )",
	")",
	")",
	"	( BLOCK block-name { form }* ) 	",
	"(",
	" BLOCK block-name { form }* )",
	"BLOCK",
	"{ form }",
	"object | symbol-token | compound-form",
	"object",
	"| symbol-token | compound-form",
	"symbol-token",
	"| compound-form",
	" )",
	")",
	"( SETQ {setq-pair}* )",
	"(",
	" SETQ {setq-pair}* )",
	"SETQ",
	"{setq-pair}",
	"symbol-token",
	"object | symbol-token | compound-form",
	"object",
	"| symbol-token | compound-form",
	"symbol-token",
	"| compound-form",
	" )",
	")",
	"num-add",
	"num-less-than",
	"num-less-or-equal-than",
	"num-greater-than",
	"num-greater-or-equal-than",
	"num-equal-than",
	"	( = {number-token}* ) 			",
	"(",
	" = {number-token}* )",
	"=",
	" {number-token}* )",
	"{number-token}",
	"number-token",
	" )",
	")",
	"num-not-equal-than",
	"'",
	"QUOTE",
	"| 	( LOOP {compound-form}* )",
	"(",
	" LOOP {compound-form}* )",
	"LOOP",
	"{compound-form}",
	" )",
	")",
	"setq ::=",
	"( SETQ {setq-pair}* )",
	"(",
	" SETQ {setq-pair}* )",
	"SETQ",
	"{setq-pair}",
	"symbol-token",
	"object | symbol-token | compound-form",
	"object",
	"| symbol-token | compound-form",
	"symbol-token",
	"| compound-form",
	" )",
	")",
	"defconstant ::=",
	"( DEFCONSTANT name form [documentation] )",
	"(",
	" DEFCONSTANT name form [documentation] )",
	"DEFCONSTANT",
	"name",
	"symbol-token",
	"form",
	"object | symbol-token | compound-form",
	"object",
	"| symbol-token | compound-form",
	"symbol-token",
	"| compound-form",
	"[documentation]",
	"documentation",
	"string",
	"<TBD>",
	"<TBD>",
	" )",
	")",
	")",
	"if ::=",
	"	( IF test-form then-form [else-form] )",
	"(",
	" IF test-form then-form [else-form] )",
	"IF",
	"form",
	"object | symbol-token | compound-form",
	"object",
	"| symbol-token | compound-form",
	"symbol-token",
	"| compound-form",
	"form",
	"object | symbol-token | compound-form",
	"object",
	"| symbol-token | compound-form",
	"symbol-token",
	"| compound-form",
	"[else-form]",
	"form",
	"object | symbol-token | compound-form",
	"object",
	"| symbol-token | compound-form",
	"symbol-token",
	"| compound-form",
	" )",
	")",
	")",
	"return ::=",
	"	( RETURN [form] ) 	 	",
	"(",
	" RETURN [form] )",
	"RETURN",
	"[form]",
	"form",
	"object | symbol-token | compound-form",
	"object",
	"| symbol-token | compound-form",
	"symbol-token",
	"| compound-form",
	" )",
	")",
	")",
	"loop ::=",
	"	( LOOP {compound-form}* )",
	"(",
	" LOOP {compound-form}* )",
	"LOOP",
	"{compound-form}",
	" )",
	")",
	"defun ::=",
	"	( DEFUN function-name lambda-list [documentation] {form}* )",
	"(",
	" DEFUN function-name lambda-list [documentation] {form}* )",
	"DEFUN",
	"symbol-token",
	" lambda-list [documentation] {form}* )",
	"lambda-list",
	"( {var}* )",
	"(",
	" {var}* )",
	"{var}",
	"var",
	"symbol-token",
	" )",
	")",
	" [documentation] {form}* )",
	"[documentation]",
	"documentation",
	"string",
	"<TBD>",
	"<TBD>",
	" {form}* )",
	"{form}",
	"form",
	"object | symbol-token | compound-form",
	"object",
	"| symbol-token | compound-form",
	"symbol-token",
	"| compound-form",
	" )",
	")",
	"{form}",
	"form",
	"object | symbol-token | compound-form",
	"object",
	"| symbol-token | compound-form",
	"symbol-token",
	"| compound-form",
	" )",
	")",
	"defstruct ::=",
	"	( DEFSTRUCT name ( {slot-name}* ) ) 	",
	"(",
	" DEFSTRUCT name ( {slot-name}* ) )",
	"DEFSTRUCT",
	"name",
	"symbol-token",
	"(",
	"{slot-name}",
	"symbol-token",
	")",
	" )",
	")",
	"defmacro ::=",
	"(",
	" name lambda-list [documentation] {form}* )",
	"name",
	"symbol-token",
	" lambda-list [documentation] {form}* )",
	"lambda-list",
	"( {var}* )",
	"(",
	" {var}* )",
	"{var}",
	"var",
	"symbol-token",
	" )",
	")",
	" [documentation] {form}* )",
	"[documentation]",
	"documentation",
	"string",
	"<TBD>",
	"<TBD>",
	" {form}* )",
	"{form}",
	"form",
	"object | symbol-token | compound-form",
	"object",
	"| symbol-token | compound-form",
	"symbol-token",
	"| compound-form",
	" )",
	")",
	"{form}",
	"form",
	"object | symbol-token | compound-form",
	"object",
	"| symbol-token | compound-form",
	"symbol-token",
	"| compound-form",
	" )",
	")",
	"(",
	"object",
	"output-stream",
	"<undefined>",
	"<undefined>",
	" )",
	")",
	")",
	"'",
	"QUOTE",
