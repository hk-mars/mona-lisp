	"$",
	"%",
	"&",
	"*",
	"+",
	"-",
	".",
	"/",
	"0",
	"1",
	"2",
	"3",
	"4",
	"5",
	"6",
	"7",
	"8",
	"9",
	":",
	"<",
	"=",
	">",
	"@",
	"A",
	"B",
	"C",
	"D",
	"E",
	"F",
	"G",
	"H",
	"I",
	"J",
	"K",
	"L",
	"M",
	"N",
	"O",
	"P",
	"Q",
	"R",
	"S",
	"T",
	"U",
	"V",
	"W",
	"X",
	"Y",
	"Z",
	"a",
	"b",
	"c",
	"d",
	"e",
	"f",
	"g",
	"h",
	"i",
	"j",
	"k",
	"l",
	"m",
	"n",
	"o",
	"p",
	"q",
	"r",
	"s",
	"t",
	"u",
	"v",
	"w",
	"x",
	"y",
	"z",
	"^",
	"_",
	"~",
	"#\rubout",
	""",
	"'",
	"(",
	")",
	",",
	";",
	"`",
	"##",
	"#\backslash",
	"#\vertical-bar",
	"#\b",
	"#\t",
	"#\r",
	"#\n",
	"#\p",
	"#\space",
	"constituent-undefined ::=",
	"print ::=",
	"constituent-undefined ::=",
	"!",
	"?",
	"#",
	"#\(",
	"print ::=",
	"PRINT",
	"	$ | % | & | * | + | - | . | / | 	0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 	: | < | = | > | @ |  	A | B | C | D | E | F | G | H | I | J | K | L | M |  	N | O | P | Q | R | S | T | U | V | W | X | Y | Z | 	a | b | c | d | e | f | g | h | i | j | k | l | m |  	n | o | p | q | r | s | t | u | v | w | x | y | z |	 	^ | _ | ~ | rubout",
	"#\(",
	"#\(",
	"#",
	" { object }* )",
	" object ",
	" list )",
	"list",
	" list )",
	"list",
	" object object )",
	" object )",
	" object object )",
	" object )",
	" object object )",
	" object )",
	"list",
	"car",
	"cdr",
	"cons",
	" object object )",
	" object )",
	"eq",
	"if",
	" test-form then-form [else-form] )",
	"test-form",
	" then-form [else-form] )",
	"then-form",
	" [else-form] )",
	"else-form",
	"return",
	" [form] )",
	"block",
	" block-name { form }* )",
	"block-name",
	"symbol-token 	",
	" { form }* )",
	" form ",
	" {setq-pair}* )",
	"setq-pair",
	"setq-var form",
	"setq-var",
	" form",
	" {compound-form}* )",
	"compound-form",
	" {setq-pair}* )",
	"setq-pair",
	"setq-var form",
	"setq-var",
	" form",
	" name form [documentation] )",
	" form [documentation] )",
	" [documentation] )",
	" test-form then-form [else-form] )",
	"test-form",
	" then-form [else-form] )",
	"then-form",
	" [else-form] )",
	"else-form",
	" [form] )",
	" {compound-form}* )",
	"compound-form",
	" function-name lambda-list [documentation] {form}* )",
	"function-name",
	"symbol-token | list",
	"| list",
	" name ( {slot-name}* ) )",
	" ( {slot-name}* ) )",
	" {slot-name}* ) )",
	"slot-name",
	" ) )",
	"	( name lambda-list [documentation] {form}* ) 	",
	"print ::=",
	"( PRINT object [output-stream] )",
	" PRINT object [output-stream] )",
	"PRINT",
	" object [output-stream] )",
	" [output-stream] )",
	"[output-stream]",
