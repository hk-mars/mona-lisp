	"#\(right-parent",
	"#\)",
	"##  left-parent := #\( right-parent := #\)",
	"  left-parent := #\( right-parent := #\)",
	" := #\( right-parent := #\)",
	" #\( right-parent := #\)",
	"#\(",
	" { object }* )",
	" object ",
	" list )",
	" list )",
	" object object )",
	" object )",
	" object object )",
	" object )",
	" object object )",
	" object )",
	" object object )",
	" object )",
	" test-form then-form [else-form] )",
	"test-form",
	" then-form [else-form] )",
	"then-form",
	" [else-form] )",
	"else-form",
	" [form] )",
	" block-name { form }* )",
	"block-name",
	"symbol-token 	",
	" { form }* )",
	" form ",
	" {setq-pair}* )",
	"setq-pair",
	"setq-var form",
	"setq-var",
	" form",
	" {compound-form}* )",
	"compound-form",
	" {setq-pair}* )",
	"setq-pair",
	"setq-var form",
	"setq-var",
	" form",
	" name form [documentation] )",
	" form [documentation] )",
	" [documentation] )",
	" test-form then-form [else-form] )",
	"test-form",
	" then-form [else-form] )",
	"then-form",
	" [else-form] )",
	"else-form",
	" [form] )",
	" {compound-form}* )",
	"compound-form",
	" function-name lambda-list [documentation] {form}* )",
	"function-name",
	"symbol-token | list",
	"| list",
	" name ( {slot-name}* ) )",
	" ( {slot-name}* ) )",
	" {slot-name}* ) )",
	"slot-name",
	" ) )",
